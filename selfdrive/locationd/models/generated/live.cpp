#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4640959636948014038) {
   out_4640959636948014038[0] = 0;
   out_4640959636948014038[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4640959636948014038[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4640959636948014038[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4640959636948014038[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4640959636948014038[5] = -sin(in_vec[1]);
   out_4640959636948014038[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4640959636948014038[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4640959636948014038[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4640959636948014038[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4640959636948014038[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4640959636948014038[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4640959636948014038[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4640959636948014038[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4640959636948014038[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4640959636948014038[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4640959636948014038[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4640959636948014038[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7467068823118735973) {
   out_7467068823118735973[0] = delta_x[0] + nom_x[0];
   out_7467068823118735973[1] = delta_x[1] + nom_x[1];
   out_7467068823118735973[2] = delta_x[2] + nom_x[2];
   out_7467068823118735973[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7467068823118735973[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7467068823118735973[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7467068823118735973[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7467068823118735973[7] = delta_x[6] + nom_x[7];
   out_7467068823118735973[8] = delta_x[7] + nom_x[8];
   out_7467068823118735973[9] = delta_x[8] + nom_x[9];
   out_7467068823118735973[10] = delta_x[9] + nom_x[10];
   out_7467068823118735973[11] = delta_x[10] + nom_x[11];
   out_7467068823118735973[12] = delta_x[11] + nom_x[12];
   out_7467068823118735973[13] = delta_x[12] + nom_x[13];
   out_7467068823118735973[14] = delta_x[13] + nom_x[14];
   out_7467068823118735973[15] = delta_x[14] + nom_x[15];
   out_7467068823118735973[16] = delta_x[15] + nom_x[16];
   out_7467068823118735973[17] = delta_x[16] + nom_x[17];
   out_7467068823118735973[18] = delta_x[17] + nom_x[18];
   out_7467068823118735973[19] = delta_x[18] + nom_x[19];
   out_7467068823118735973[20] = delta_x[19] + nom_x[20];
   out_7467068823118735973[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8618272779433270887) {
   out_8618272779433270887[0] = -nom_x[0] + true_x[0];
   out_8618272779433270887[1] = -nom_x[1] + true_x[1];
   out_8618272779433270887[2] = -nom_x[2] + true_x[2];
   out_8618272779433270887[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8618272779433270887[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8618272779433270887[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8618272779433270887[6] = -nom_x[7] + true_x[7];
   out_8618272779433270887[7] = -nom_x[8] + true_x[8];
   out_8618272779433270887[8] = -nom_x[9] + true_x[9];
   out_8618272779433270887[9] = -nom_x[10] + true_x[10];
   out_8618272779433270887[10] = -nom_x[11] + true_x[11];
   out_8618272779433270887[11] = -nom_x[12] + true_x[12];
   out_8618272779433270887[12] = -nom_x[13] + true_x[13];
   out_8618272779433270887[13] = -nom_x[14] + true_x[14];
   out_8618272779433270887[14] = -nom_x[15] + true_x[15];
   out_8618272779433270887[15] = -nom_x[16] + true_x[16];
   out_8618272779433270887[16] = -nom_x[17] + true_x[17];
   out_8618272779433270887[17] = -nom_x[18] + true_x[18];
   out_8618272779433270887[18] = -nom_x[19] + true_x[19];
   out_8618272779433270887[19] = -nom_x[20] + true_x[20];
   out_8618272779433270887[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5706763310066995728) {
   out_5706763310066995728[0] = 1.0;
   out_5706763310066995728[1] = 0;
   out_5706763310066995728[2] = 0;
   out_5706763310066995728[3] = 0;
   out_5706763310066995728[4] = 0;
   out_5706763310066995728[5] = 0;
   out_5706763310066995728[6] = 0;
   out_5706763310066995728[7] = 0;
   out_5706763310066995728[8] = 0;
   out_5706763310066995728[9] = 0;
   out_5706763310066995728[10] = 0;
   out_5706763310066995728[11] = 0;
   out_5706763310066995728[12] = 0;
   out_5706763310066995728[13] = 0;
   out_5706763310066995728[14] = 0;
   out_5706763310066995728[15] = 0;
   out_5706763310066995728[16] = 0;
   out_5706763310066995728[17] = 0;
   out_5706763310066995728[18] = 0;
   out_5706763310066995728[19] = 0;
   out_5706763310066995728[20] = 0;
   out_5706763310066995728[21] = 0;
   out_5706763310066995728[22] = 1.0;
   out_5706763310066995728[23] = 0;
   out_5706763310066995728[24] = 0;
   out_5706763310066995728[25] = 0;
   out_5706763310066995728[26] = 0;
   out_5706763310066995728[27] = 0;
   out_5706763310066995728[28] = 0;
   out_5706763310066995728[29] = 0;
   out_5706763310066995728[30] = 0;
   out_5706763310066995728[31] = 0;
   out_5706763310066995728[32] = 0;
   out_5706763310066995728[33] = 0;
   out_5706763310066995728[34] = 0;
   out_5706763310066995728[35] = 0;
   out_5706763310066995728[36] = 0;
   out_5706763310066995728[37] = 0;
   out_5706763310066995728[38] = 0;
   out_5706763310066995728[39] = 0;
   out_5706763310066995728[40] = 0;
   out_5706763310066995728[41] = 0;
   out_5706763310066995728[42] = 0;
   out_5706763310066995728[43] = 0;
   out_5706763310066995728[44] = 1.0;
   out_5706763310066995728[45] = 0;
   out_5706763310066995728[46] = 0;
   out_5706763310066995728[47] = 0;
   out_5706763310066995728[48] = 0;
   out_5706763310066995728[49] = 0;
   out_5706763310066995728[50] = 0;
   out_5706763310066995728[51] = 0;
   out_5706763310066995728[52] = 0;
   out_5706763310066995728[53] = 0;
   out_5706763310066995728[54] = 0;
   out_5706763310066995728[55] = 0;
   out_5706763310066995728[56] = 0;
   out_5706763310066995728[57] = 0;
   out_5706763310066995728[58] = 0;
   out_5706763310066995728[59] = 0;
   out_5706763310066995728[60] = 0;
   out_5706763310066995728[61] = 0;
   out_5706763310066995728[62] = 0;
   out_5706763310066995728[63] = 0;
   out_5706763310066995728[64] = 0;
   out_5706763310066995728[65] = 0;
   out_5706763310066995728[66] = -0.5*state[4];
   out_5706763310066995728[67] = -0.5*state[5];
   out_5706763310066995728[68] = -0.5*state[6];
   out_5706763310066995728[69] = 0;
   out_5706763310066995728[70] = 0;
   out_5706763310066995728[71] = 0;
   out_5706763310066995728[72] = 0;
   out_5706763310066995728[73] = 0;
   out_5706763310066995728[74] = 0;
   out_5706763310066995728[75] = 0;
   out_5706763310066995728[76] = 0;
   out_5706763310066995728[77] = 0;
   out_5706763310066995728[78] = 0;
   out_5706763310066995728[79] = 0;
   out_5706763310066995728[80] = 0;
   out_5706763310066995728[81] = 0;
   out_5706763310066995728[82] = 0;
   out_5706763310066995728[83] = 0;
   out_5706763310066995728[84] = 0;
   out_5706763310066995728[85] = 0;
   out_5706763310066995728[86] = 0;
   out_5706763310066995728[87] = 0.5*state[3];
   out_5706763310066995728[88] = 0.5*state[6];
   out_5706763310066995728[89] = -0.5*state[5];
   out_5706763310066995728[90] = 0;
   out_5706763310066995728[91] = 0;
   out_5706763310066995728[92] = 0;
   out_5706763310066995728[93] = 0;
   out_5706763310066995728[94] = 0;
   out_5706763310066995728[95] = 0;
   out_5706763310066995728[96] = 0;
   out_5706763310066995728[97] = 0;
   out_5706763310066995728[98] = 0;
   out_5706763310066995728[99] = 0;
   out_5706763310066995728[100] = 0;
   out_5706763310066995728[101] = 0;
   out_5706763310066995728[102] = 0;
   out_5706763310066995728[103] = 0;
   out_5706763310066995728[104] = 0;
   out_5706763310066995728[105] = 0;
   out_5706763310066995728[106] = 0;
   out_5706763310066995728[107] = 0;
   out_5706763310066995728[108] = -0.5*state[6];
   out_5706763310066995728[109] = 0.5*state[3];
   out_5706763310066995728[110] = 0.5*state[4];
   out_5706763310066995728[111] = 0;
   out_5706763310066995728[112] = 0;
   out_5706763310066995728[113] = 0;
   out_5706763310066995728[114] = 0;
   out_5706763310066995728[115] = 0;
   out_5706763310066995728[116] = 0;
   out_5706763310066995728[117] = 0;
   out_5706763310066995728[118] = 0;
   out_5706763310066995728[119] = 0;
   out_5706763310066995728[120] = 0;
   out_5706763310066995728[121] = 0;
   out_5706763310066995728[122] = 0;
   out_5706763310066995728[123] = 0;
   out_5706763310066995728[124] = 0;
   out_5706763310066995728[125] = 0;
   out_5706763310066995728[126] = 0;
   out_5706763310066995728[127] = 0;
   out_5706763310066995728[128] = 0;
   out_5706763310066995728[129] = 0.5*state[5];
   out_5706763310066995728[130] = -0.5*state[4];
   out_5706763310066995728[131] = 0.5*state[3];
   out_5706763310066995728[132] = 0;
   out_5706763310066995728[133] = 0;
   out_5706763310066995728[134] = 0;
   out_5706763310066995728[135] = 0;
   out_5706763310066995728[136] = 0;
   out_5706763310066995728[137] = 0;
   out_5706763310066995728[138] = 0;
   out_5706763310066995728[139] = 0;
   out_5706763310066995728[140] = 0;
   out_5706763310066995728[141] = 0;
   out_5706763310066995728[142] = 0;
   out_5706763310066995728[143] = 0;
   out_5706763310066995728[144] = 0;
   out_5706763310066995728[145] = 0;
   out_5706763310066995728[146] = 0;
   out_5706763310066995728[147] = 0;
   out_5706763310066995728[148] = 0;
   out_5706763310066995728[149] = 0;
   out_5706763310066995728[150] = 0;
   out_5706763310066995728[151] = 0;
   out_5706763310066995728[152] = 0;
   out_5706763310066995728[153] = 1.0;
   out_5706763310066995728[154] = 0;
   out_5706763310066995728[155] = 0;
   out_5706763310066995728[156] = 0;
   out_5706763310066995728[157] = 0;
   out_5706763310066995728[158] = 0;
   out_5706763310066995728[159] = 0;
   out_5706763310066995728[160] = 0;
   out_5706763310066995728[161] = 0;
   out_5706763310066995728[162] = 0;
   out_5706763310066995728[163] = 0;
   out_5706763310066995728[164] = 0;
   out_5706763310066995728[165] = 0;
   out_5706763310066995728[166] = 0;
   out_5706763310066995728[167] = 0;
   out_5706763310066995728[168] = 0;
   out_5706763310066995728[169] = 0;
   out_5706763310066995728[170] = 0;
   out_5706763310066995728[171] = 0;
   out_5706763310066995728[172] = 0;
   out_5706763310066995728[173] = 0;
   out_5706763310066995728[174] = 0;
   out_5706763310066995728[175] = 1.0;
   out_5706763310066995728[176] = 0;
   out_5706763310066995728[177] = 0;
   out_5706763310066995728[178] = 0;
   out_5706763310066995728[179] = 0;
   out_5706763310066995728[180] = 0;
   out_5706763310066995728[181] = 0;
   out_5706763310066995728[182] = 0;
   out_5706763310066995728[183] = 0;
   out_5706763310066995728[184] = 0;
   out_5706763310066995728[185] = 0;
   out_5706763310066995728[186] = 0;
   out_5706763310066995728[187] = 0;
   out_5706763310066995728[188] = 0;
   out_5706763310066995728[189] = 0;
   out_5706763310066995728[190] = 0;
   out_5706763310066995728[191] = 0;
   out_5706763310066995728[192] = 0;
   out_5706763310066995728[193] = 0;
   out_5706763310066995728[194] = 0;
   out_5706763310066995728[195] = 0;
   out_5706763310066995728[196] = 0;
   out_5706763310066995728[197] = 1.0;
   out_5706763310066995728[198] = 0;
   out_5706763310066995728[199] = 0;
   out_5706763310066995728[200] = 0;
   out_5706763310066995728[201] = 0;
   out_5706763310066995728[202] = 0;
   out_5706763310066995728[203] = 0;
   out_5706763310066995728[204] = 0;
   out_5706763310066995728[205] = 0;
   out_5706763310066995728[206] = 0;
   out_5706763310066995728[207] = 0;
   out_5706763310066995728[208] = 0;
   out_5706763310066995728[209] = 0;
   out_5706763310066995728[210] = 0;
   out_5706763310066995728[211] = 0;
   out_5706763310066995728[212] = 0;
   out_5706763310066995728[213] = 0;
   out_5706763310066995728[214] = 0;
   out_5706763310066995728[215] = 0;
   out_5706763310066995728[216] = 0;
   out_5706763310066995728[217] = 0;
   out_5706763310066995728[218] = 0;
   out_5706763310066995728[219] = 1.0;
   out_5706763310066995728[220] = 0;
   out_5706763310066995728[221] = 0;
   out_5706763310066995728[222] = 0;
   out_5706763310066995728[223] = 0;
   out_5706763310066995728[224] = 0;
   out_5706763310066995728[225] = 0;
   out_5706763310066995728[226] = 0;
   out_5706763310066995728[227] = 0;
   out_5706763310066995728[228] = 0;
   out_5706763310066995728[229] = 0;
   out_5706763310066995728[230] = 0;
   out_5706763310066995728[231] = 0;
   out_5706763310066995728[232] = 0;
   out_5706763310066995728[233] = 0;
   out_5706763310066995728[234] = 0;
   out_5706763310066995728[235] = 0;
   out_5706763310066995728[236] = 0;
   out_5706763310066995728[237] = 0;
   out_5706763310066995728[238] = 0;
   out_5706763310066995728[239] = 0;
   out_5706763310066995728[240] = 0;
   out_5706763310066995728[241] = 1.0;
   out_5706763310066995728[242] = 0;
   out_5706763310066995728[243] = 0;
   out_5706763310066995728[244] = 0;
   out_5706763310066995728[245] = 0;
   out_5706763310066995728[246] = 0;
   out_5706763310066995728[247] = 0;
   out_5706763310066995728[248] = 0;
   out_5706763310066995728[249] = 0;
   out_5706763310066995728[250] = 0;
   out_5706763310066995728[251] = 0;
   out_5706763310066995728[252] = 0;
   out_5706763310066995728[253] = 0;
   out_5706763310066995728[254] = 0;
   out_5706763310066995728[255] = 0;
   out_5706763310066995728[256] = 0;
   out_5706763310066995728[257] = 0;
   out_5706763310066995728[258] = 0;
   out_5706763310066995728[259] = 0;
   out_5706763310066995728[260] = 0;
   out_5706763310066995728[261] = 0;
   out_5706763310066995728[262] = 0;
   out_5706763310066995728[263] = 1.0;
   out_5706763310066995728[264] = 0;
   out_5706763310066995728[265] = 0;
   out_5706763310066995728[266] = 0;
   out_5706763310066995728[267] = 0;
   out_5706763310066995728[268] = 0;
   out_5706763310066995728[269] = 0;
   out_5706763310066995728[270] = 0;
   out_5706763310066995728[271] = 0;
   out_5706763310066995728[272] = 0;
   out_5706763310066995728[273] = 0;
   out_5706763310066995728[274] = 0;
   out_5706763310066995728[275] = 0;
   out_5706763310066995728[276] = 0;
   out_5706763310066995728[277] = 0;
   out_5706763310066995728[278] = 0;
   out_5706763310066995728[279] = 0;
   out_5706763310066995728[280] = 0;
   out_5706763310066995728[281] = 0;
   out_5706763310066995728[282] = 0;
   out_5706763310066995728[283] = 0;
   out_5706763310066995728[284] = 0;
   out_5706763310066995728[285] = 1.0;
   out_5706763310066995728[286] = 0;
   out_5706763310066995728[287] = 0;
   out_5706763310066995728[288] = 0;
   out_5706763310066995728[289] = 0;
   out_5706763310066995728[290] = 0;
   out_5706763310066995728[291] = 0;
   out_5706763310066995728[292] = 0;
   out_5706763310066995728[293] = 0;
   out_5706763310066995728[294] = 0;
   out_5706763310066995728[295] = 0;
   out_5706763310066995728[296] = 0;
   out_5706763310066995728[297] = 0;
   out_5706763310066995728[298] = 0;
   out_5706763310066995728[299] = 0;
   out_5706763310066995728[300] = 0;
   out_5706763310066995728[301] = 0;
   out_5706763310066995728[302] = 0;
   out_5706763310066995728[303] = 0;
   out_5706763310066995728[304] = 0;
   out_5706763310066995728[305] = 0;
   out_5706763310066995728[306] = 0;
   out_5706763310066995728[307] = 1.0;
   out_5706763310066995728[308] = 0;
   out_5706763310066995728[309] = 0;
   out_5706763310066995728[310] = 0;
   out_5706763310066995728[311] = 0;
   out_5706763310066995728[312] = 0;
   out_5706763310066995728[313] = 0;
   out_5706763310066995728[314] = 0;
   out_5706763310066995728[315] = 0;
   out_5706763310066995728[316] = 0;
   out_5706763310066995728[317] = 0;
   out_5706763310066995728[318] = 0;
   out_5706763310066995728[319] = 0;
   out_5706763310066995728[320] = 0;
   out_5706763310066995728[321] = 0;
   out_5706763310066995728[322] = 0;
   out_5706763310066995728[323] = 0;
   out_5706763310066995728[324] = 0;
   out_5706763310066995728[325] = 0;
   out_5706763310066995728[326] = 0;
   out_5706763310066995728[327] = 0;
   out_5706763310066995728[328] = 0;
   out_5706763310066995728[329] = 1.0;
   out_5706763310066995728[330] = 0;
   out_5706763310066995728[331] = 0;
   out_5706763310066995728[332] = 0;
   out_5706763310066995728[333] = 0;
   out_5706763310066995728[334] = 0;
   out_5706763310066995728[335] = 0;
   out_5706763310066995728[336] = 0;
   out_5706763310066995728[337] = 0;
   out_5706763310066995728[338] = 0;
   out_5706763310066995728[339] = 0;
   out_5706763310066995728[340] = 0;
   out_5706763310066995728[341] = 0;
   out_5706763310066995728[342] = 0;
   out_5706763310066995728[343] = 0;
   out_5706763310066995728[344] = 0;
   out_5706763310066995728[345] = 0;
   out_5706763310066995728[346] = 0;
   out_5706763310066995728[347] = 0;
   out_5706763310066995728[348] = 0;
   out_5706763310066995728[349] = 0;
   out_5706763310066995728[350] = 0;
   out_5706763310066995728[351] = 1.0;
   out_5706763310066995728[352] = 0;
   out_5706763310066995728[353] = 0;
   out_5706763310066995728[354] = 0;
   out_5706763310066995728[355] = 0;
   out_5706763310066995728[356] = 0;
   out_5706763310066995728[357] = 0;
   out_5706763310066995728[358] = 0;
   out_5706763310066995728[359] = 0;
   out_5706763310066995728[360] = 0;
   out_5706763310066995728[361] = 0;
   out_5706763310066995728[362] = 0;
   out_5706763310066995728[363] = 0;
   out_5706763310066995728[364] = 0;
   out_5706763310066995728[365] = 0;
   out_5706763310066995728[366] = 0;
   out_5706763310066995728[367] = 0;
   out_5706763310066995728[368] = 0;
   out_5706763310066995728[369] = 0;
   out_5706763310066995728[370] = 0;
   out_5706763310066995728[371] = 0;
   out_5706763310066995728[372] = 0;
   out_5706763310066995728[373] = 1.0;
   out_5706763310066995728[374] = 0;
   out_5706763310066995728[375] = 0;
   out_5706763310066995728[376] = 0;
   out_5706763310066995728[377] = 0;
   out_5706763310066995728[378] = 0;
   out_5706763310066995728[379] = 0;
   out_5706763310066995728[380] = 0;
   out_5706763310066995728[381] = 0;
   out_5706763310066995728[382] = 0;
   out_5706763310066995728[383] = 0;
   out_5706763310066995728[384] = 0;
   out_5706763310066995728[385] = 0;
   out_5706763310066995728[386] = 0;
   out_5706763310066995728[387] = 0;
   out_5706763310066995728[388] = 0;
   out_5706763310066995728[389] = 0;
   out_5706763310066995728[390] = 0;
   out_5706763310066995728[391] = 0;
   out_5706763310066995728[392] = 0;
   out_5706763310066995728[393] = 0;
   out_5706763310066995728[394] = 0;
   out_5706763310066995728[395] = 1.0;
   out_5706763310066995728[396] = 0;
   out_5706763310066995728[397] = 0;
   out_5706763310066995728[398] = 0;
   out_5706763310066995728[399] = 0;
   out_5706763310066995728[400] = 0;
   out_5706763310066995728[401] = 0;
   out_5706763310066995728[402] = 0;
   out_5706763310066995728[403] = 0;
   out_5706763310066995728[404] = 0;
   out_5706763310066995728[405] = 0;
   out_5706763310066995728[406] = 0;
   out_5706763310066995728[407] = 0;
   out_5706763310066995728[408] = 0;
   out_5706763310066995728[409] = 0;
   out_5706763310066995728[410] = 0;
   out_5706763310066995728[411] = 0;
   out_5706763310066995728[412] = 0;
   out_5706763310066995728[413] = 0;
   out_5706763310066995728[414] = 0;
   out_5706763310066995728[415] = 0;
   out_5706763310066995728[416] = 0;
   out_5706763310066995728[417] = 1.0;
   out_5706763310066995728[418] = 0;
   out_5706763310066995728[419] = 0;
   out_5706763310066995728[420] = 0;
   out_5706763310066995728[421] = 0;
   out_5706763310066995728[422] = 0;
   out_5706763310066995728[423] = 0;
   out_5706763310066995728[424] = 0;
   out_5706763310066995728[425] = 0;
   out_5706763310066995728[426] = 0;
   out_5706763310066995728[427] = 0;
   out_5706763310066995728[428] = 0;
   out_5706763310066995728[429] = 0;
   out_5706763310066995728[430] = 0;
   out_5706763310066995728[431] = 0;
   out_5706763310066995728[432] = 0;
   out_5706763310066995728[433] = 0;
   out_5706763310066995728[434] = 0;
   out_5706763310066995728[435] = 0;
   out_5706763310066995728[436] = 0;
   out_5706763310066995728[437] = 0;
   out_5706763310066995728[438] = 0;
   out_5706763310066995728[439] = 1.0;
   out_5706763310066995728[440] = 0;
   out_5706763310066995728[441] = 0;
   out_5706763310066995728[442] = 0;
   out_5706763310066995728[443] = 0;
   out_5706763310066995728[444] = 0;
   out_5706763310066995728[445] = 0;
   out_5706763310066995728[446] = 0;
   out_5706763310066995728[447] = 0;
   out_5706763310066995728[448] = 0;
   out_5706763310066995728[449] = 0;
   out_5706763310066995728[450] = 0;
   out_5706763310066995728[451] = 0;
   out_5706763310066995728[452] = 0;
   out_5706763310066995728[453] = 0;
   out_5706763310066995728[454] = 0;
   out_5706763310066995728[455] = 0;
   out_5706763310066995728[456] = 0;
   out_5706763310066995728[457] = 0;
   out_5706763310066995728[458] = 0;
   out_5706763310066995728[459] = 0;
   out_5706763310066995728[460] = 0;
   out_5706763310066995728[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5212913569150379461) {
   out_5212913569150379461[0] = dt*state[7] + state[0];
   out_5212913569150379461[1] = dt*state[8] + state[1];
   out_5212913569150379461[2] = dt*state[9] + state[2];
   out_5212913569150379461[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5212913569150379461[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5212913569150379461[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5212913569150379461[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5212913569150379461[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5212913569150379461[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5212913569150379461[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5212913569150379461[10] = state[10];
   out_5212913569150379461[11] = state[11];
   out_5212913569150379461[12] = state[12];
   out_5212913569150379461[13] = state[13];
   out_5212913569150379461[14] = state[14];
   out_5212913569150379461[15] = state[15];
   out_5212913569150379461[16] = state[16];
   out_5212913569150379461[17] = state[17];
   out_5212913569150379461[18] = state[18];
   out_5212913569150379461[19] = state[19];
   out_5212913569150379461[20] = state[20];
   out_5212913569150379461[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6547933205693937135) {
   out_6547933205693937135[0] = 1;
   out_6547933205693937135[1] = 0;
   out_6547933205693937135[2] = 0;
   out_6547933205693937135[3] = 0;
   out_6547933205693937135[4] = 0;
   out_6547933205693937135[5] = 0;
   out_6547933205693937135[6] = dt;
   out_6547933205693937135[7] = 0;
   out_6547933205693937135[8] = 0;
   out_6547933205693937135[9] = 0;
   out_6547933205693937135[10] = 0;
   out_6547933205693937135[11] = 0;
   out_6547933205693937135[12] = 0;
   out_6547933205693937135[13] = 0;
   out_6547933205693937135[14] = 0;
   out_6547933205693937135[15] = 0;
   out_6547933205693937135[16] = 0;
   out_6547933205693937135[17] = 0;
   out_6547933205693937135[18] = 0;
   out_6547933205693937135[19] = 0;
   out_6547933205693937135[20] = 0;
   out_6547933205693937135[21] = 0;
   out_6547933205693937135[22] = 1;
   out_6547933205693937135[23] = 0;
   out_6547933205693937135[24] = 0;
   out_6547933205693937135[25] = 0;
   out_6547933205693937135[26] = 0;
   out_6547933205693937135[27] = 0;
   out_6547933205693937135[28] = dt;
   out_6547933205693937135[29] = 0;
   out_6547933205693937135[30] = 0;
   out_6547933205693937135[31] = 0;
   out_6547933205693937135[32] = 0;
   out_6547933205693937135[33] = 0;
   out_6547933205693937135[34] = 0;
   out_6547933205693937135[35] = 0;
   out_6547933205693937135[36] = 0;
   out_6547933205693937135[37] = 0;
   out_6547933205693937135[38] = 0;
   out_6547933205693937135[39] = 0;
   out_6547933205693937135[40] = 0;
   out_6547933205693937135[41] = 0;
   out_6547933205693937135[42] = 0;
   out_6547933205693937135[43] = 0;
   out_6547933205693937135[44] = 1;
   out_6547933205693937135[45] = 0;
   out_6547933205693937135[46] = 0;
   out_6547933205693937135[47] = 0;
   out_6547933205693937135[48] = 0;
   out_6547933205693937135[49] = 0;
   out_6547933205693937135[50] = dt;
   out_6547933205693937135[51] = 0;
   out_6547933205693937135[52] = 0;
   out_6547933205693937135[53] = 0;
   out_6547933205693937135[54] = 0;
   out_6547933205693937135[55] = 0;
   out_6547933205693937135[56] = 0;
   out_6547933205693937135[57] = 0;
   out_6547933205693937135[58] = 0;
   out_6547933205693937135[59] = 0;
   out_6547933205693937135[60] = 0;
   out_6547933205693937135[61] = 0;
   out_6547933205693937135[62] = 0;
   out_6547933205693937135[63] = 0;
   out_6547933205693937135[64] = 0;
   out_6547933205693937135[65] = 0;
   out_6547933205693937135[66] = 1;
   out_6547933205693937135[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6547933205693937135[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6547933205693937135[69] = 0;
   out_6547933205693937135[70] = 0;
   out_6547933205693937135[71] = 0;
   out_6547933205693937135[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6547933205693937135[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6547933205693937135[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6547933205693937135[75] = 0;
   out_6547933205693937135[76] = 0;
   out_6547933205693937135[77] = 0;
   out_6547933205693937135[78] = 0;
   out_6547933205693937135[79] = 0;
   out_6547933205693937135[80] = 0;
   out_6547933205693937135[81] = 0;
   out_6547933205693937135[82] = 0;
   out_6547933205693937135[83] = 0;
   out_6547933205693937135[84] = 0;
   out_6547933205693937135[85] = 0;
   out_6547933205693937135[86] = 0;
   out_6547933205693937135[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6547933205693937135[88] = 1;
   out_6547933205693937135[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6547933205693937135[90] = 0;
   out_6547933205693937135[91] = 0;
   out_6547933205693937135[92] = 0;
   out_6547933205693937135[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6547933205693937135[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6547933205693937135[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6547933205693937135[96] = 0;
   out_6547933205693937135[97] = 0;
   out_6547933205693937135[98] = 0;
   out_6547933205693937135[99] = 0;
   out_6547933205693937135[100] = 0;
   out_6547933205693937135[101] = 0;
   out_6547933205693937135[102] = 0;
   out_6547933205693937135[103] = 0;
   out_6547933205693937135[104] = 0;
   out_6547933205693937135[105] = 0;
   out_6547933205693937135[106] = 0;
   out_6547933205693937135[107] = 0;
   out_6547933205693937135[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6547933205693937135[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6547933205693937135[110] = 1;
   out_6547933205693937135[111] = 0;
   out_6547933205693937135[112] = 0;
   out_6547933205693937135[113] = 0;
   out_6547933205693937135[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6547933205693937135[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6547933205693937135[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6547933205693937135[117] = 0;
   out_6547933205693937135[118] = 0;
   out_6547933205693937135[119] = 0;
   out_6547933205693937135[120] = 0;
   out_6547933205693937135[121] = 0;
   out_6547933205693937135[122] = 0;
   out_6547933205693937135[123] = 0;
   out_6547933205693937135[124] = 0;
   out_6547933205693937135[125] = 0;
   out_6547933205693937135[126] = 0;
   out_6547933205693937135[127] = 0;
   out_6547933205693937135[128] = 0;
   out_6547933205693937135[129] = 0;
   out_6547933205693937135[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6547933205693937135[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6547933205693937135[132] = 1;
   out_6547933205693937135[133] = 0;
   out_6547933205693937135[134] = 0;
   out_6547933205693937135[135] = 0;
   out_6547933205693937135[136] = 0;
   out_6547933205693937135[137] = 0;
   out_6547933205693937135[138] = 0;
   out_6547933205693937135[139] = 0;
   out_6547933205693937135[140] = 0;
   out_6547933205693937135[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6547933205693937135[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6547933205693937135[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6547933205693937135[144] = 0;
   out_6547933205693937135[145] = 0;
   out_6547933205693937135[146] = 0;
   out_6547933205693937135[147] = 0;
   out_6547933205693937135[148] = 0;
   out_6547933205693937135[149] = 0;
   out_6547933205693937135[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6547933205693937135[151] = 0;
   out_6547933205693937135[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6547933205693937135[153] = 0;
   out_6547933205693937135[154] = 1;
   out_6547933205693937135[155] = 0;
   out_6547933205693937135[156] = 0;
   out_6547933205693937135[157] = 0;
   out_6547933205693937135[158] = 0;
   out_6547933205693937135[159] = 0;
   out_6547933205693937135[160] = 0;
   out_6547933205693937135[161] = 0;
   out_6547933205693937135[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6547933205693937135[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6547933205693937135[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6547933205693937135[165] = 0;
   out_6547933205693937135[166] = 0;
   out_6547933205693937135[167] = 0;
   out_6547933205693937135[168] = 0;
   out_6547933205693937135[169] = 0;
   out_6547933205693937135[170] = 0;
   out_6547933205693937135[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6547933205693937135[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6547933205693937135[173] = 0;
   out_6547933205693937135[174] = 0;
   out_6547933205693937135[175] = 0;
   out_6547933205693937135[176] = 1;
   out_6547933205693937135[177] = 0;
   out_6547933205693937135[178] = 0;
   out_6547933205693937135[179] = 0;
   out_6547933205693937135[180] = 0;
   out_6547933205693937135[181] = 0;
   out_6547933205693937135[182] = 0;
   out_6547933205693937135[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6547933205693937135[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6547933205693937135[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6547933205693937135[186] = 0;
   out_6547933205693937135[187] = 0;
   out_6547933205693937135[188] = 0;
   out_6547933205693937135[189] = 0;
   out_6547933205693937135[190] = 0;
   out_6547933205693937135[191] = 0;
   out_6547933205693937135[192] = 0;
   out_6547933205693937135[193] = 0;
   out_6547933205693937135[194] = 0;
   out_6547933205693937135[195] = 0;
   out_6547933205693937135[196] = 0;
   out_6547933205693937135[197] = 0;
   out_6547933205693937135[198] = 1;
   out_6547933205693937135[199] = 0;
   out_6547933205693937135[200] = 0;
   out_6547933205693937135[201] = 0;
   out_6547933205693937135[202] = 0;
   out_6547933205693937135[203] = 0;
   out_6547933205693937135[204] = 0;
   out_6547933205693937135[205] = 0;
   out_6547933205693937135[206] = 0;
   out_6547933205693937135[207] = 0;
   out_6547933205693937135[208] = 0;
   out_6547933205693937135[209] = 0;
   out_6547933205693937135[210] = 0;
   out_6547933205693937135[211] = 0;
   out_6547933205693937135[212] = 0;
   out_6547933205693937135[213] = 0;
   out_6547933205693937135[214] = 0;
   out_6547933205693937135[215] = 0;
   out_6547933205693937135[216] = 0;
   out_6547933205693937135[217] = 0;
   out_6547933205693937135[218] = 0;
   out_6547933205693937135[219] = 0;
   out_6547933205693937135[220] = 1;
   out_6547933205693937135[221] = 0;
   out_6547933205693937135[222] = 0;
   out_6547933205693937135[223] = 0;
   out_6547933205693937135[224] = 0;
   out_6547933205693937135[225] = 0;
   out_6547933205693937135[226] = 0;
   out_6547933205693937135[227] = 0;
   out_6547933205693937135[228] = 0;
   out_6547933205693937135[229] = 0;
   out_6547933205693937135[230] = 0;
   out_6547933205693937135[231] = 0;
   out_6547933205693937135[232] = 0;
   out_6547933205693937135[233] = 0;
   out_6547933205693937135[234] = 0;
   out_6547933205693937135[235] = 0;
   out_6547933205693937135[236] = 0;
   out_6547933205693937135[237] = 0;
   out_6547933205693937135[238] = 0;
   out_6547933205693937135[239] = 0;
   out_6547933205693937135[240] = 0;
   out_6547933205693937135[241] = 0;
   out_6547933205693937135[242] = 1;
   out_6547933205693937135[243] = 0;
   out_6547933205693937135[244] = 0;
   out_6547933205693937135[245] = 0;
   out_6547933205693937135[246] = 0;
   out_6547933205693937135[247] = 0;
   out_6547933205693937135[248] = 0;
   out_6547933205693937135[249] = 0;
   out_6547933205693937135[250] = 0;
   out_6547933205693937135[251] = 0;
   out_6547933205693937135[252] = 0;
   out_6547933205693937135[253] = 0;
   out_6547933205693937135[254] = 0;
   out_6547933205693937135[255] = 0;
   out_6547933205693937135[256] = 0;
   out_6547933205693937135[257] = 0;
   out_6547933205693937135[258] = 0;
   out_6547933205693937135[259] = 0;
   out_6547933205693937135[260] = 0;
   out_6547933205693937135[261] = 0;
   out_6547933205693937135[262] = 0;
   out_6547933205693937135[263] = 0;
   out_6547933205693937135[264] = 1;
   out_6547933205693937135[265] = 0;
   out_6547933205693937135[266] = 0;
   out_6547933205693937135[267] = 0;
   out_6547933205693937135[268] = 0;
   out_6547933205693937135[269] = 0;
   out_6547933205693937135[270] = 0;
   out_6547933205693937135[271] = 0;
   out_6547933205693937135[272] = 0;
   out_6547933205693937135[273] = 0;
   out_6547933205693937135[274] = 0;
   out_6547933205693937135[275] = 0;
   out_6547933205693937135[276] = 0;
   out_6547933205693937135[277] = 0;
   out_6547933205693937135[278] = 0;
   out_6547933205693937135[279] = 0;
   out_6547933205693937135[280] = 0;
   out_6547933205693937135[281] = 0;
   out_6547933205693937135[282] = 0;
   out_6547933205693937135[283] = 0;
   out_6547933205693937135[284] = 0;
   out_6547933205693937135[285] = 0;
   out_6547933205693937135[286] = 1;
   out_6547933205693937135[287] = 0;
   out_6547933205693937135[288] = 0;
   out_6547933205693937135[289] = 0;
   out_6547933205693937135[290] = 0;
   out_6547933205693937135[291] = 0;
   out_6547933205693937135[292] = 0;
   out_6547933205693937135[293] = 0;
   out_6547933205693937135[294] = 0;
   out_6547933205693937135[295] = 0;
   out_6547933205693937135[296] = 0;
   out_6547933205693937135[297] = 0;
   out_6547933205693937135[298] = 0;
   out_6547933205693937135[299] = 0;
   out_6547933205693937135[300] = 0;
   out_6547933205693937135[301] = 0;
   out_6547933205693937135[302] = 0;
   out_6547933205693937135[303] = 0;
   out_6547933205693937135[304] = 0;
   out_6547933205693937135[305] = 0;
   out_6547933205693937135[306] = 0;
   out_6547933205693937135[307] = 0;
   out_6547933205693937135[308] = 1;
   out_6547933205693937135[309] = 0;
   out_6547933205693937135[310] = 0;
   out_6547933205693937135[311] = 0;
   out_6547933205693937135[312] = 0;
   out_6547933205693937135[313] = 0;
   out_6547933205693937135[314] = 0;
   out_6547933205693937135[315] = 0;
   out_6547933205693937135[316] = 0;
   out_6547933205693937135[317] = 0;
   out_6547933205693937135[318] = 0;
   out_6547933205693937135[319] = 0;
   out_6547933205693937135[320] = 0;
   out_6547933205693937135[321] = 0;
   out_6547933205693937135[322] = 0;
   out_6547933205693937135[323] = 0;
   out_6547933205693937135[324] = 0;
   out_6547933205693937135[325] = 0;
   out_6547933205693937135[326] = 0;
   out_6547933205693937135[327] = 0;
   out_6547933205693937135[328] = 0;
   out_6547933205693937135[329] = 0;
   out_6547933205693937135[330] = 1;
   out_6547933205693937135[331] = 0;
   out_6547933205693937135[332] = 0;
   out_6547933205693937135[333] = 0;
   out_6547933205693937135[334] = 0;
   out_6547933205693937135[335] = 0;
   out_6547933205693937135[336] = 0;
   out_6547933205693937135[337] = 0;
   out_6547933205693937135[338] = 0;
   out_6547933205693937135[339] = 0;
   out_6547933205693937135[340] = 0;
   out_6547933205693937135[341] = 0;
   out_6547933205693937135[342] = 0;
   out_6547933205693937135[343] = 0;
   out_6547933205693937135[344] = 0;
   out_6547933205693937135[345] = 0;
   out_6547933205693937135[346] = 0;
   out_6547933205693937135[347] = 0;
   out_6547933205693937135[348] = 0;
   out_6547933205693937135[349] = 0;
   out_6547933205693937135[350] = 0;
   out_6547933205693937135[351] = 0;
   out_6547933205693937135[352] = 1;
   out_6547933205693937135[353] = 0;
   out_6547933205693937135[354] = 0;
   out_6547933205693937135[355] = 0;
   out_6547933205693937135[356] = 0;
   out_6547933205693937135[357] = 0;
   out_6547933205693937135[358] = 0;
   out_6547933205693937135[359] = 0;
   out_6547933205693937135[360] = 0;
   out_6547933205693937135[361] = 0;
   out_6547933205693937135[362] = 0;
   out_6547933205693937135[363] = 0;
   out_6547933205693937135[364] = 0;
   out_6547933205693937135[365] = 0;
   out_6547933205693937135[366] = 0;
   out_6547933205693937135[367] = 0;
   out_6547933205693937135[368] = 0;
   out_6547933205693937135[369] = 0;
   out_6547933205693937135[370] = 0;
   out_6547933205693937135[371] = 0;
   out_6547933205693937135[372] = 0;
   out_6547933205693937135[373] = 0;
   out_6547933205693937135[374] = 1;
   out_6547933205693937135[375] = 0;
   out_6547933205693937135[376] = 0;
   out_6547933205693937135[377] = 0;
   out_6547933205693937135[378] = 0;
   out_6547933205693937135[379] = 0;
   out_6547933205693937135[380] = 0;
   out_6547933205693937135[381] = 0;
   out_6547933205693937135[382] = 0;
   out_6547933205693937135[383] = 0;
   out_6547933205693937135[384] = 0;
   out_6547933205693937135[385] = 0;
   out_6547933205693937135[386] = 0;
   out_6547933205693937135[387] = 0;
   out_6547933205693937135[388] = 0;
   out_6547933205693937135[389] = 0;
   out_6547933205693937135[390] = 0;
   out_6547933205693937135[391] = 0;
   out_6547933205693937135[392] = 0;
   out_6547933205693937135[393] = 0;
   out_6547933205693937135[394] = 0;
   out_6547933205693937135[395] = 0;
   out_6547933205693937135[396] = 1;
   out_6547933205693937135[397] = 0;
   out_6547933205693937135[398] = 0;
   out_6547933205693937135[399] = 0;
   out_6547933205693937135[400] = 0;
   out_6547933205693937135[401] = 0;
   out_6547933205693937135[402] = 0;
   out_6547933205693937135[403] = 0;
   out_6547933205693937135[404] = 0;
   out_6547933205693937135[405] = 0;
   out_6547933205693937135[406] = 0;
   out_6547933205693937135[407] = 0;
   out_6547933205693937135[408] = 0;
   out_6547933205693937135[409] = 0;
   out_6547933205693937135[410] = 0;
   out_6547933205693937135[411] = 0;
   out_6547933205693937135[412] = 0;
   out_6547933205693937135[413] = 0;
   out_6547933205693937135[414] = 0;
   out_6547933205693937135[415] = 0;
   out_6547933205693937135[416] = 0;
   out_6547933205693937135[417] = 0;
   out_6547933205693937135[418] = 1;
   out_6547933205693937135[419] = 0;
   out_6547933205693937135[420] = 0;
   out_6547933205693937135[421] = 0;
   out_6547933205693937135[422] = 0;
   out_6547933205693937135[423] = 0;
   out_6547933205693937135[424] = 0;
   out_6547933205693937135[425] = 0;
   out_6547933205693937135[426] = 0;
   out_6547933205693937135[427] = 0;
   out_6547933205693937135[428] = 0;
   out_6547933205693937135[429] = 0;
   out_6547933205693937135[430] = 0;
   out_6547933205693937135[431] = 0;
   out_6547933205693937135[432] = 0;
   out_6547933205693937135[433] = 0;
   out_6547933205693937135[434] = 0;
   out_6547933205693937135[435] = 0;
   out_6547933205693937135[436] = 0;
   out_6547933205693937135[437] = 0;
   out_6547933205693937135[438] = 0;
   out_6547933205693937135[439] = 0;
   out_6547933205693937135[440] = 1;
}
void h_4(double *state, double *unused, double *out_7224261667833738994) {
   out_7224261667833738994[0] = state[10] + state[13];
   out_7224261667833738994[1] = state[11] + state[14];
   out_7224261667833738994[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8970320576934456300) {
   out_8970320576934456300[0] = 0;
   out_8970320576934456300[1] = 0;
   out_8970320576934456300[2] = 0;
   out_8970320576934456300[3] = 0;
   out_8970320576934456300[4] = 0;
   out_8970320576934456300[5] = 0;
   out_8970320576934456300[6] = 0;
   out_8970320576934456300[7] = 0;
   out_8970320576934456300[8] = 0;
   out_8970320576934456300[9] = 0;
   out_8970320576934456300[10] = 1;
   out_8970320576934456300[11] = 0;
   out_8970320576934456300[12] = 0;
   out_8970320576934456300[13] = 1;
   out_8970320576934456300[14] = 0;
   out_8970320576934456300[15] = 0;
   out_8970320576934456300[16] = 0;
   out_8970320576934456300[17] = 0;
   out_8970320576934456300[18] = 0;
   out_8970320576934456300[19] = 0;
   out_8970320576934456300[20] = 0;
   out_8970320576934456300[21] = 0;
   out_8970320576934456300[22] = 0;
   out_8970320576934456300[23] = 0;
   out_8970320576934456300[24] = 0;
   out_8970320576934456300[25] = 0;
   out_8970320576934456300[26] = 0;
   out_8970320576934456300[27] = 0;
   out_8970320576934456300[28] = 0;
   out_8970320576934456300[29] = 0;
   out_8970320576934456300[30] = 0;
   out_8970320576934456300[31] = 0;
   out_8970320576934456300[32] = 0;
   out_8970320576934456300[33] = 1;
   out_8970320576934456300[34] = 0;
   out_8970320576934456300[35] = 0;
   out_8970320576934456300[36] = 1;
   out_8970320576934456300[37] = 0;
   out_8970320576934456300[38] = 0;
   out_8970320576934456300[39] = 0;
   out_8970320576934456300[40] = 0;
   out_8970320576934456300[41] = 0;
   out_8970320576934456300[42] = 0;
   out_8970320576934456300[43] = 0;
   out_8970320576934456300[44] = 0;
   out_8970320576934456300[45] = 0;
   out_8970320576934456300[46] = 0;
   out_8970320576934456300[47] = 0;
   out_8970320576934456300[48] = 0;
   out_8970320576934456300[49] = 0;
   out_8970320576934456300[50] = 0;
   out_8970320576934456300[51] = 0;
   out_8970320576934456300[52] = 0;
   out_8970320576934456300[53] = 0;
   out_8970320576934456300[54] = 0;
   out_8970320576934456300[55] = 0;
   out_8970320576934456300[56] = 1;
   out_8970320576934456300[57] = 0;
   out_8970320576934456300[58] = 0;
   out_8970320576934456300[59] = 1;
   out_8970320576934456300[60] = 0;
   out_8970320576934456300[61] = 0;
   out_8970320576934456300[62] = 0;
   out_8970320576934456300[63] = 0;
   out_8970320576934456300[64] = 0;
   out_8970320576934456300[65] = 0;
}
void h_9(double *state, double *unused, double *out_5186807139601691025) {
   out_5186807139601691025[0] = state[10];
   out_5186807139601691025[1] = state[11];
   out_5186807139601691025[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2189204561510647846) {
   out_2189204561510647846[0] = 0;
   out_2189204561510647846[1] = 0;
   out_2189204561510647846[2] = 0;
   out_2189204561510647846[3] = 0;
   out_2189204561510647846[4] = 0;
   out_2189204561510647846[5] = 0;
   out_2189204561510647846[6] = 0;
   out_2189204561510647846[7] = 0;
   out_2189204561510647846[8] = 0;
   out_2189204561510647846[9] = 0;
   out_2189204561510647846[10] = 1;
   out_2189204561510647846[11] = 0;
   out_2189204561510647846[12] = 0;
   out_2189204561510647846[13] = 0;
   out_2189204561510647846[14] = 0;
   out_2189204561510647846[15] = 0;
   out_2189204561510647846[16] = 0;
   out_2189204561510647846[17] = 0;
   out_2189204561510647846[18] = 0;
   out_2189204561510647846[19] = 0;
   out_2189204561510647846[20] = 0;
   out_2189204561510647846[21] = 0;
   out_2189204561510647846[22] = 0;
   out_2189204561510647846[23] = 0;
   out_2189204561510647846[24] = 0;
   out_2189204561510647846[25] = 0;
   out_2189204561510647846[26] = 0;
   out_2189204561510647846[27] = 0;
   out_2189204561510647846[28] = 0;
   out_2189204561510647846[29] = 0;
   out_2189204561510647846[30] = 0;
   out_2189204561510647846[31] = 0;
   out_2189204561510647846[32] = 0;
   out_2189204561510647846[33] = 1;
   out_2189204561510647846[34] = 0;
   out_2189204561510647846[35] = 0;
   out_2189204561510647846[36] = 0;
   out_2189204561510647846[37] = 0;
   out_2189204561510647846[38] = 0;
   out_2189204561510647846[39] = 0;
   out_2189204561510647846[40] = 0;
   out_2189204561510647846[41] = 0;
   out_2189204561510647846[42] = 0;
   out_2189204561510647846[43] = 0;
   out_2189204561510647846[44] = 0;
   out_2189204561510647846[45] = 0;
   out_2189204561510647846[46] = 0;
   out_2189204561510647846[47] = 0;
   out_2189204561510647846[48] = 0;
   out_2189204561510647846[49] = 0;
   out_2189204561510647846[50] = 0;
   out_2189204561510647846[51] = 0;
   out_2189204561510647846[52] = 0;
   out_2189204561510647846[53] = 0;
   out_2189204561510647846[54] = 0;
   out_2189204561510647846[55] = 0;
   out_2189204561510647846[56] = 1;
   out_2189204561510647846[57] = 0;
   out_2189204561510647846[58] = 0;
   out_2189204561510647846[59] = 0;
   out_2189204561510647846[60] = 0;
   out_2189204561510647846[61] = 0;
   out_2189204561510647846[62] = 0;
   out_2189204561510647846[63] = 0;
   out_2189204561510647846[64] = 0;
   out_2189204561510647846[65] = 0;
}
void h_10(double *state, double *unused, double *out_1082825965162285702) {
   out_1082825965162285702[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1082825965162285702[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1082825965162285702[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_9016189941414358059) {
   out_9016189941414358059[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9016189941414358059[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9016189941414358059[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_9016189941414358059[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9016189941414358059[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9016189941414358059[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9016189941414358059[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9016189941414358059[7] = 0;
   out_9016189941414358059[8] = 0;
   out_9016189941414358059[9] = 0;
   out_9016189941414358059[10] = 0;
   out_9016189941414358059[11] = 0;
   out_9016189941414358059[12] = 0;
   out_9016189941414358059[13] = 0;
   out_9016189941414358059[14] = 0;
   out_9016189941414358059[15] = 0;
   out_9016189941414358059[16] = 1;
   out_9016189941414358059[17] = 0;
   out_9016189941414358059[18] = 0;
   out_9016189941414358059[19] = 1;
   out_9016189941414358059[20] = 0;
   out_9016189941414358059[21] = 0;
   out_9016189941414358059[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9016189941414358059[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9016189941414358059[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_9016189941414358059[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9016189941414358059[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9016189941414358059[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9016189941414358059[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9016189941414358059[29] = 0;
   out_9016189941414358059[30] = 0;
   out_9016189941414358059[31] = 0;
   out_9016189941414358059[32] = 0;
   out_9016189941414358059[33] = 0;
   out_9016189941414358059[34] = 0;
   out_9016189941414358059[35] = 0;
   out_9016189941414358059[36] = 0;
   out_9016189941414358059[37] = 0;
   out_9016189941414358059[38] = 0;
   out_9016189941414358059[39] = 1;
   out_9016189941414358059[40] = 0;
   out_9016189941414358059[41] = 0;
   out_9016189941414358059[42] = 1;
   out_9016189941414358059[43] = 0;
   out_9016189941414358059[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_9016189941414358059[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_9016189941414358059[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9016189941414358059[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9016189941414358059[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9016189941414358059[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9016189941414358059[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9016189941414358059[51] = 0;
   out_9016189941414358059[52] = 0;
   out_9016189941414358059[53] = 0;
   out_9016189941414358059[54] = 0;
   out_9016189941414358059[55] = 0;
   out_9016189941414358059[56] = 0;
   out_9016189941414358059[57] = 0;
   out_9016189941414358059[58] = 0;
   out_9016189941414358059[59] = 0;
   out_9016189941414358059[60] = 0;
   out_9016189941414358059[61] = 0;
   out_9016189941414358059[62] = 1;
   out_9016189941414358059[63] = 0;
   out_9016189941414358059[64] = 0;
   out_9016189941414358059[65] = 1;
}
void h_12(double *state, double *unused, double *out_4470135640924812660) {
   out_4470135640924812660[0] = state[0];
   out_4470135640924812660[1] = state[1];
   out_4470135640924812660[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2589062199891723304) {
   out_2589062199891723304[0] = 1;
   out_2589062199891723304[1] = 0;
   out_2589062199891723304[2] = 0;
   out_2589062199891723304[3] = 0;
   out_2589062199891723304[4] = 0;
   out_2589062199891723304[5] = 0;
   out_2589062199891723304[6] = 0;
   out_2589062199891723304[7] = 0;
   out_2589062199891723304[8] = 0;
   out_2589062199891723304[9] = 0;
   out_2589062199891723304[10] = 0;
   out_2589062199891723304[11] = 0;
   out_2589062199891723304[12] = 0;
   out_2589062199891723304[13] = 0;
   out_2589062199891723304[14] = 0;
   out_2589062199891723304[15] = 0;
   out_2589062199891723304[16] = 0;
   out_2589062199891723304[17] = 0;
   out_2589062199891723304[18] = 0;
   out_2589062199891723304[19] = 0;
   out_2589062199891723304[20] = 0;
   out_2589062199891723304[21] = 0;
   out_2589062199891723304[22] = 0;
   out_2589062199891723304[23] = 1;
   out_2589062199891723304[24] = 0;
   out_2589062199891723304[25] = 0;
   out_2589062199891723304[26] = 0;
   out_2589062199891723304[27] = 0;
   out_2589062199891723304[28] = 0;
   out_2589062199891723304[29] = 0;
   out_2589062199891723304[30] = 0;
   out_2589062199891723304[31] = 0;
   out_2589062199891723304[32] = 0;
   out_2589062199891723304[33] = 0;
   out_2589062199891723304[34] = 0;
   out_2589062199891723304[35] = 0;
   out_2589062199891723304[36] = 0;
   out_2589062199891723304[37] = 0;
   out_2589062199891723304[38] = 0;
   out_2589062199891723304[39] = 0;
   out_2589062199891723304[40] = 0;
   out_2589062199891723304[41] = 0;
   out_2589062199891723304[42] = 0;
   out_2589062199891723304[43] = 0;
   out_2589062199891723304[44] = 0;
   out_2589062199891723304[45] = 0;
   out_2589062199891723304[46] = 1;
   out_2589062199891723304[47] = 0;
   out_2589062199891723304[48] = 0;
   out_2589062199891723304[49] = 0;
   out_2589062199891723304[50] = 0;
   out_2589062199891723304[51] = 0;
   out_2589062199891723304[52] = 0;
   out_2589062199891723304[53] = 0;
   out_2589062199891723304[54] = 0;
   out_2589062199891723304[55] = 0;
   out_2589062199891723304[56] = 0;
   out_2589062199891723304[57] = 0;
   out_2589062199891723304[58] = 0;
   out_2589062199891723304[59] = 0;
   out_2589062199891723304[60] = 0;
   out_2589062199891723304[61] = 0;
   out_2589062199891723304[62] = 0;
   out_2589062199891723304[63] = 0;
   out_2589062199891723304[64] = 0;
   out_2589062199891723304[65] = 0;
}
void h_35(double *state, double *unused, double *out_5450177788933746815) {
   out_5450177788933746815[0] = state[7];
   out_5450177788933746815[1] = state[8];
   out_5450177788933746815[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1711404056418119812) {
   out_1711404056418119812[0] = 0;
   out_1711404056418119812[1] = 0;
   out_1711404056418119812[2] = 0;
   out_1711404056418119812[3] = 0;
   out_1711404056418119812[4] = 0;
   out_1711404056418119812[5] = 0;
   out_1711404056418119812[6] = 0;
   out_1711404056418119812[7] = 1;
   out_1711404056418119812[8] = 0;
   out_1711404056418119812[9] = 0;
   out_1711404056418119812[10] = 0;
   out_1711404056418119812[11] = 0;
   out_1711404056418119812[12] = 0;
   out_1711404056418119812[13] = 0;
   out_1711404056418119812[14] = 0;
   out_1711404056418119812[15] = 0;
   out_1711404056418119812[16] = 0;
   out_1711404056418119812[17] = 0;
   out_1711404056418119812[18] = 0;
   out_1711404056418119812[19] = 0;
   out_1711404056418119812[20] = 0;
   out_1711404056418119812[21] = 0;
   out_1711404056418119812[22] = 0;
   out_1711404056418119812[23] = 0;
   out_1711404056418119812[24] = 0;
   out_1711404056418119812[25] = 0;
   out_1711404056418119812[26] = 0;
   out_1711404056418119812[27] = 0;
   out_1711404056418119812[28] = 0;
   out_1711404056418119812[29] = 0;
   out_1711404056418119812[30] = 1;
   out_1711404056418119812[31] = 0;
   out_1711404056418119812[32] = 0;
   out_1711404056418119812[33] = 0;
   out_1711404056418119812[34] = 0;
   out_1711404056418119812[35] = 0;
   out_1711404056418119812[36] = 0;
   out_1711404056418119812[37] = 0;
   out_1711404056418119812[38] = 0;
   out_1711404056418119812[39] = 0;
   out_1711404056418119812[40] = 0;
   out_1711404056418119812[41] = 0;
   out_1711404056418119812[42] = 0;
   out_1711404056418119812[43] = 0;
   out_1711404056418119812[44] = 0;
   out_1711404056418119812[45] = 0;
   out_1711404056418119812[46] = 0;
   out_1711404056418119812[47] = 0;
   out_1711404056418119812[48] = 0;
   out_1711404056418119812[49] = 0;
   out_1711404056418119812[50] = 0;
   out_1711404056418119812[51] = 0;
   out_1711404056418119812[52] = 0;
   out_1711404056418119812[53] = 1;
   out_1711404056418119812[54] = 0;
   out_1711404056418119812[55] = 0;
   out_1711404056418119812[56] = 0;
   out_1711404056418119812[57] = 0;
   out_1711404056418119812[58] = 0;
   out_1711404056418119812[59] = 0;
   out_1711404056418119812[60] = 0;
   out_1711404056418119812[61] = 0;
   out_1711404056418119812[62] = 0;
   out_1711404056418119812[63] = 0;
   out_1711404056418119812[64] = 0;
   out_1711404056418119812[65] = 0;
}
void h_32(double *state, double *unused, double *out_2945518167078691846) {
   out_2945518167078691846[0] = state[3];
   out_2945518167078691846[1] = state[4];
   out_2945518167078691846[2] = state[5];
   out_2945518167078691846[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7310814469285202045) {
   out_7310814469285202045[0] = 0;
   out_7310814469285202045[1] = 0;
   out_7310814469285202045[2] = 0;
   out_7310814469285202045[3] = 1;
   out_7310814469285202045[4] = 0;
   out_7310814469285202045[5] = 0;
   out_7310814469285202045[6] = 0;
   out_7310814469285202045[7] = 0;
   out_7310814469285202045[8] = 0;
   out_7310814469285202045[9] = 0;
   out_7310814469285202045[10] = 0;
   out_7310814469285202045[11] = 0;
   out_7310814469285202045[12] = 0;
   out_7310814469285202045[13] = 0;
   out_7310814469285202045[14] = 0;
   out_7310814469285202045[15] = 0;
   out_7310814469285202045[16] = 0;
   out_7310814469285202045[17] = 0;
   out_7310814469285202045[18] = 0;
   out_7310814469285202045[19] = 0;
   out_7310814469285202045[20] = 0;
   out_7310814469285202045[21] = 0;
   out_7310814469285202045[22] = 0;
   out_7310814469285202045[23] = 0;
   out_7310814469285202045[24] = 0;
   out_7310814469285202045[25] = 0;
   out_7310814469285202045[26] = 1;
   out_7310814469285202045[27] = 0;
   out_7310814469285202045[28] = 0;
   out_7310814469285202045[29] = 0;
   out_7310814469285202045[30] = 0;
   out_7310814469285202045[31] = 0;
   out_7310814469285202045[32] = 0;
   out_7310814469285202045[33] = 0;
   out_7310814469285202045[34] = 0;
   out_7310814469285202045[35] = 0;
   out_7310814469285202045[36] = 0;
   out_7310814469285202045[37] = 0;
   out_7310814469285202045[38] = 0;
   out_7310814469285202045[39] = 0;
   out_7310814469285202045[40] = 0;
   out_7310814469285202045[41] = 0;
   out_7310814469285202045[42] = 0;
   out_7310814469285202045[43] = 0;
   out_7310814469285202045[44] = 0;
   out_7310814469285202045[45] = 0;
   out_7310814469285202045[46] = 0;
   out_7310814469285202045[47] = 0;
   out_7310814469285202045[48] = 0;
   out_7310814469285202045[49] = 1;
   out_7310814469285202045[50] = 0;
   out_7310814469285202045[51] = 0;
   out_7310814469285202045[52] = 0;
   out_7310814469285202045[53] = 0;
   out_7310814469285202045[54] = 0;
   out_7310814469285202045[55] = 0;
   out_7310814469285202045[56] = 0;
   out_7310814469285202045[57] = 0;
   out_7310814469285202045[58] = 0;
   out_7310814469285202045[59] = 0;
   out_7310814469285202045[60] = 0;
   out_7310814469285202045[61] = 0;
   out_7310814469285202045[62] = 0;
   out_7310814469285202045[63] = 0;
   out_7310814469285202045[64] = 0;
   out_7310814469285202045[65] = 0;
   out_7310814469285202045[66] = 0;
   out_7310814469285202045[67] = 0;
   out_7310814469285202045[68] = 0;
   out_7310814469285202045[69] = 0;
   out_7310814469285202045[70] = 0;
   out_7310814469285202045[71] = 0;
   out_7310814469285202045[72] = 1;
   out_7310814469285202045[73] = 0;
   out_7310814469285202045[74] = 0;
   out_7310814469285202045[75] = 0;
   out_7310814469285202045[76] = 0;
   out_7310814469285202045[77] = 0;
   out_7310814469285202045[78] = 0;
   out_7310814469285202045[79] = 0;
   out_7310814469285202045[80] = 0;
   out_7310814469285202045[81] = 0;
   out_7310814469285202045[82] = 0;
   out_7310814469285202045[83] = 0;
   out_7310814469285202045[84] = 0;
   out_7310814469285202045[85] = 0;
   out_7310814469285202045[86] = 0;
   out_7310814469285202045[87] = 0;
}
void h_13(double *state, double *unused, double *out_3709304441405941971) {
   out_3709304441405941971[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3709304441405941971[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3709304441405941971[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8569683698395746195) {
   out_8569683698395746195[0] = 0;
   out_8569683698395746195[1] = 0;
   out_8569683698395746195[2] = 0;
   out_8569683698395746195[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8569683698395746195[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8569683698395746195[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8569683698395746195[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8569683698395746195[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8569683698395746195[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8569683698395746195[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8569683698395746195[10] = 0;
   out_8569683698395746195[11] = 0;
   out_8569683698395746195[12] = 0;
   out_8569683698395746195[13] = 0;
   out_8569683698395746195[14] = 0;
   out_8569683698395746195[15] = 0;
   out_8569683698395746195[16] = 0;
   out_8569683698395746195[17] = 0;
   out_8569683698395746195[18] = 0;
   out_8569683698395746195[19] = 0;
   out_8569683698395746195[20] = 0;
   out_8569683698395746195[21] = 0;
   out_8569683698395746195[22] = 0;
   out_8569683698395746195[23] = 0;
   out_8569683698395746195[24] = 0;
   out_8569683698395746195[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8569683698395746195[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8569683698395746195[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8569683698395746195[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8569683698395746195[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8569683698395746195[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8569683698395746195[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8569683698395746195[32] = 0;
   out_8569683698395746195[33] = 0;
   out_8569683698395746195[34] = 0;
   out_8569683698395746195[35] = 0;
   out_8569683698395746195[36] = 0;
   out_8569683698395746195[37] = 0;
   out_8569683698395746195[38] = 0;
   out_8569683698395746195[39] = 0;
   out_8569683698395746195[40] = 0;
   out_8569683698395746195[41] = 0;
   out_8569683698395746195[42] = 0;
   out_8569683698395746195[43] = 0;
   out_8569683698395746195[44] = 0;
   out_8569683698395746195[45] = 0;
   out_8569683698395746195[46] = 0;
   out_8569683698395746195[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8569683698395746195[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8569683698395746195[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8569683698395746195[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8569683698395746195[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8569683698395746195[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8569683698395746195[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8569683698395746195[54] = 0;
   out_8569683698395746195[55] = 0;
   out_8569683698395746195[56] = 0;
   out_8569683698395746195[57] = 0;
   out_8569683698395746195[58] = 0;
   out_8569683698395746195[59] = 0;
   out_8569683698395746195[60] = 0;
   out_8569683698395746195[61] = 0;
   out_8569683698395746195[62] = 0;
   out_8569683698395746195[63] = 0;
   out_8569683698395746195[64] = 0;
   out_8569683698395746195[65] = 0;
}
void h_14(double *state, double *unused, double *out_5186807139601691025) {
   out_5186807139601691025[0] = state[10];
   out_5186807139601691025[1] = state[11];
   out_5186807139601691025[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2189204561510647846) {
   out_2189204561510647846[0] = 0;
   out_2189204561510647846[1] = 0;
   out_2189204561510647846[2] = 0;
   out_2189204561510647846[3] = 0;
   out_2189204561510647846[4] = 0;
   out_2189204561510647846[5] = 0;
   out_2189204561510647846[6] = 0;
   out_2189204561510647846[7] = 0;
   out_2189204561510647846[8] = 0;
   out_2189204561510647846[9] = 0;
   out_2189204561510647846[10] = 1;
   out_2189204561510647846[11] = 0;
   out_2189204561510647846[12] = 0;
   out_2189204561510647846[13] = 0;
   out_2189204561510647846[14] = 0;
   out_2189204561510647846[15] = 0;
   out_2189204561510647846[16] = 0;
   out_2189204561510647846[17] = 0;
   out_2189204561510647846[18] = 0;
   out_2189204561510647846[19] = 0;
   out_2189204561510647846[20] = 0;
   out_2189204561510647846[21] = 0;
   out_2189204561510647846[22] = 0;
   out_2189204561510647846[23] = 0;
   out_2189204561510647846[24] = 0;
   out_2189204561510647846[25] = 0;
   out_2189204561510647846[26] = 0;
   out_2189204561510647846[27] = 0;
   out_2189204561510647846[28] = 0;
   out_2189204561510647846[29] = 0;
   out_2189204561510647846[30] = 0;
   out_2189204561510647846[31] = 0;
   out_2189204561510647846[32] = 0;
   out_2189204561510647846[33] = 1;
   out_2189204561510647846[34] = 0;
   out_2189204561510647846[35] = 0;
   out_2189204561510647846[36] = 0;
   out_2189204561510647846[37] = 0;
   out_2189204561510647846[38] = 0;
   out_2189204561510647846[39] = 0;
   out_2189204561510647846[40] = 0;
   out_2189204561510647846[41] = 0;
   out_2189204561510647846[42] = 0;
   out_2189204561510647846[43] = 0;
   out_2189204561510647846[44] = 0;
   out_2189204561510647846[45] = 0;
   out_2189204561510647846[46] = 0;
   out_2189204561510647846[47] = 0;
   out_2189204561510647846[48] = 0;
   out_2189204561510647846[49] = 0;
   out_2189204561510647846[50] = 0;
   out_2189204561510647846[51] = 0;
   out_2189204561510647846[52] = 0;
   out_2189204561510647846[53] = 0;
   out_2189204561510647846[54] = 0;
   out_2189204561510647846[55] = 0;
   out_2189204561510647846[56] = 1;
   out_2189204561510647846[57] = 0;
   out_2189204561510647846[58] = 0;
   out_2189204561510647846[59] = 0;
   out_2189204561510647846[60] = 0;
   out_2189204561510647846[61] = 0;
   out_2189204561510647846[62] = 0;
   out_2189204561510647846[63] = 0;
   out_2189204561510647846[64] = 0;
   out_2189204561510647846[65] = 0;
}
void h_33(double *state, double *unused, double *out_1775299852095496333) {
   out_1775299852095496333[0] = state[16];
   out_1775299852095496333[1] = state[17];
   out_1775299852095496333[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1439152948220737792) {
   out_1439152948220737792[0] = 0;
   out_1439152948220737792[1] = 0;
   out_1439152948220737792[2] = 0;
   out_1439152948220737792[3] = 0;
   out_1439152948220737792[4] = 0;
   out_1439152948220737792[5] = 0;
   out_1439152948220737792[6] = 0;
   out_1439152948220737792[7] = 0;
   out_1439152948220737792[8] = 0;
   out_1439152948220737792[9] = 0;
   out_1439152948220737792[10] = 0;
   out_1439152948220737792[11] = 0;
   out_1439152948220737792[12] = 0;
   out_1439152948220737792[13] = 0;
   out_1439152948220737792[14] = 0;
   out_1439152948220737792[15] = 0;
   out_1439152948220737792[16] = 1;
   out_1439152948220737792[17] = 0;
   out_1439152948220737792[18] = 0;
   out_1439152948220737792[19] = 0;
   out_1439152948220737792[20] = 0;
   out_1439152948220737792[21] = 0;
   out_1439152948220737792[22] = 0;
   out_1439152948220737792[23] = 0;
   out_1439152948220737792[24] = 0;
   out_1439152948220737792[25] = 0;
   out_1439152948220737792[26] = 0;
   out_1439152948220737792[27] = 0;
   out_1439152948220737792[28] = 0;
   out_1439152948220737792[29] = 0;
   out_1439152948220737792[30] = 0;
   out_1439152948220737792[31] = 0;
   out_1439152948220737792[32] = 0;
   out_1439152948220737792[33] = 0;
   out_1439152948220737792[34] = 0;
   out_1439152948220737792[35] = 0;
   out_1439152948220737792[36] = 0;
   out_1439152948220737792[37] = 0;
   out_1439152948220737792[38] = 0;
   out_1439152948220737792[39] = 1;
   out_1439152948220737792[40] = 0;
   out_1439152948220737792[41] = 0;
   out_1439152948220737792[42] = 0;
   out_1439152948220737792[43] = 0;
   out_1439152948220737792[44] = 0;
   out_1439152948220737792[45] = 0;
   out_1439152948220737792[46] = 0;
   out_1439152948220737792[47] = 0;
   out_1439152948220737792[48] = 0;
   out_1439152948220737792[49] = 0;
   out_1439152948220737792[50] = 0;
   out_1439152948220737792[51] = 0;
   out_1439152948220737792[52] = 0;
   out_1439152948220737792[53] = 0;
   out_1439152948220737792[54] = 0;
   out_1439152948220737792[55] = 0;
   out_1439152948220737792[56] = 0;
   out_1439152948220737792[57] = 0;
   out_1439152948220737792[58] = 0;
   out_1439152948220737792[59] = 0;
   out_1439152948220737792[60] = 0;
   out_1439152948220737792[61] = 0;
   out_1439152948220737792[62] = 1;
   out_1439152948220737792[63] = 0;
   out_1439152948220737792[64] = 0;
   out_1439152948220737792[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4640959636948014038) {
  H(in_vec, out_4640959636948014038);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7467068823118735973) {
  err_fun(nom_x, delta_x, out_7467068823118735973);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8618272779433270887) {
  inv_err_fun(nom_x, true_x, out_8618272779433270887);
}
void live_H_mod_fun(double *state, double *out_5706763310066995728) {
  H_mod_fun(state, out_5706763310066995728);
}
void live_f_fun(double *state, double dt, double *out_5212913569150379461) {
  f_fun(state,  dt, out_5212913569150379461);
}
void live_F_fun(double *state, double dt, double *out_6547933205693937135) {
  F_fun(state,  dt, out_6547933205693937135);
}
void live_h_4(double *state, double *unused, double *out_7224261667833738994) {
  h_4(state, unused, out_7224261667833738994);
}
void live_H_4(double *state, double *unused, double *out_8970320576934456300) {
  H_4(state, unused, out_8970320576934456300);
}
void live_h_9(double *state, double *unused, double *out_5186807139601691025) {
  h_9(state, unused, out_5186807139601691025);
}
void live_H_9(double *state, double *unused, double *out_2189204561510647846) {
  H_9(state, unused, out_2189204561510647846);
}
void live_h_10(double *state, double *unused, double *out_1082825965162285702) {
  h_10(state, unused, out_1082825965162285702);
}
void live_H_10(double *state, double *unused, double *out_9016189941414358059) {
  H_10(state, unused, out_9016189941414358059);
}
void live_h_12(double *state, double *unused, double *out_4470135640924812660) {
  h_12(state, unused, out_4470135640924812660);
}
void live_H_12(double *state, double *unused, double *out_2589062199891723304) {
  H_12(state, unused, out_2589062199891723304);
}
void live_h_35(double *state, double *unused, double *out_5450177788933746815) {
  h_35(state, unused, out_5450177788933746815);
}
void live_H_35(double *state, double *unused, double *out_1711404056418119812) {
  H_35(state, unused, out_1711404056418119812);
}
void live_h_32(double *state, double *unused, double *out_2945518167078691846) {
  h_32(state, unused, out_2945518167078691846);
}
void live_H_32(double *state, double *unused, double *out_7310814469285202045) {
  H_32(state, unused, out_7310814469285202045);
}
void live_h_13(double *state, double *unused, double *out_3709304441405941971) {
  h_13(state, unused, out_3709304441405941971);
}
void live_H_13(double *state, double *unused, double *out_8569683698395746195) {
  H_13(state, unused, out_8569683698395746195);
}
void live_h_14(double *state, double *unused, double *out_5186807139601691025) {
  h_14(state, unused, out_5186807139601691025);
}
void live_H_14(double *state, double *unused, double *out_2189204561510647846) {
  H_14(state, unused, out_2189204561510647846);
}
void live_h_33(double *state, double *unused, double *out_1775299852095496333) {
  h_33(state, unused, out_1775299852095496333);
}
void live_H_33(double *state, double *unused, double *out_1439152948220737792) {
  H_33(state, unused, out_1439152948220737792);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
